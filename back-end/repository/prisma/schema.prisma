// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String

  characterId Int?  @unique
  character   Character? @relation(fields: [characterId], references: [id])
}

model Character {
  id           Int    @id @default(autoincrement())
  name         String
  level        Int
  xp           Int
  strength     Int
  speed        Int
  magic        Int
  dexterity    Int
  healthPoints Int
  manaPoints   Int
  luck         Int
  defense      Int
  magicDefense Int
  progress     String
  characterClass        String
  user User? @relation

  moves  Move[]
}

model Move {
  id          Int     @id @default(autoincrement())
  name        String
  attack      Int
  magicAttack Int
  manaPoints  Int
  aoe         Boolean

  characters Character[]
  enemies   Enemy[]
}


model Enemy {
  id           Int    @id @default(autoincrement())
  name         String
  level        Int
  strength     Int
  speed        Int
  magic        Int
  dexterity    Int
  healthPoints Int
  manaPoints   Int
  luck         Int
  defense      Int
  magicDefense Int

  moves Move[]
}

model Battle {
  id           Int    @id @default(autoincrement())
  turnCount    Int

  // Either "player" or "enemy"
  currentTurn  String
  
  // Array of stringified json objects containing the current enemy
  enemies      String
  // stringified json object of a Character containing the current character
  character    String
  // Stringified json object containing gold, xp based on the level of the enemies
  reward       String
}
